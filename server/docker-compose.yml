version: '3.8'

networks:
  web_test:
    driver: bridge
  monitoring_monitoring:
    external: true

volumes:
  sockets: {}
  nginx_conf: {}

services:
  proxy:
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - sockets:/sockets
      - nginx_conf:/etc/nginx
    command: >
      bash -c "echo '
        worker_processes 1;
        events { 
          worker_connections 1024;
        }
        http {
          sendfile on;
          tcp_nopush on;
          tcp_nodelay on;
          proxy_next_upstream error;

          upstream web {
            server web:8080;
            #server unix:/sockets/unicorn.sock fail_timeout=0;
            keepalive 32;
          }
          
          server {
            listen 8000;

            location /stub_status {
              stub_status on;
              access_log off;
            }

            location / {
              proxy_redirect off;
              proxy_buffering off;
              proxy_pass http://web;
              proxy_http_version 1.1;
              proxy_set_header \"Connection\" \"\";  # remove close
              proxy_connect_timeout 5s;
              #proxy_send_timeout 10s;
              proxy_read_timeout 5s;
              #send_timeout 10s;
            }
          } 
        }
      ' > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    ports:
      - "8000:8000"
    networks:
      - web_test
    depends_on:
      - web

  web:
    build:
      context: web_rubyrails
      dockerfile: Dockerfile.unicorn
    restart: unless-stopped
    environment:
      - OTEL_TRACES_EXPORTER=console
      - WORKERS=5
    volumes:
      - sockets:/sockets
    expose:
      - 8080
    networks:
      - web_test
      - monitoring_monitoring
    depends_on:
      - echo

  echo:
    image: "${REGISTRY:-psaghelyi}/web_golang"
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - web_test
  
  locust:
    image: "${REGISTRY:-psaghelyi}/locust"
    command: -f /locust/locustfile.py --worker --master-host host.docker.internal
    restart: unless-stopped
    environment:
      - INFLUXDB_PATH=http://host.docker.internal:8086
      - RELAY_URL=http://echo:8080/waitrnd?ms=200
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - web_test
    depends_on:
      - web
      - proxy

#locust_master:
  #  image: locustio/locust
  #  command: -f /mnt/locust/locustfile.py --master
  #  restart: always
  #  volumes:
  ##    - ./:/mnt/locust
  #  extra_hosts:
  #    - host.docker.internal:host-gateway
  #  ports:
  #    - "8089:8089"
    